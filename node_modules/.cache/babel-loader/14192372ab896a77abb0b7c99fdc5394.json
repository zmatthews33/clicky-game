{"ast":null,"code":"var _jsxFileName = \"/Users/zmatt1/clicky-game/src/App.js\";\nimport React from \"react\";\nimport Header from \"./components/Header\";\nimport Card from \"./components/Card\";\nimport \"./App.css\";\nimport charList from \"./simpsons.json\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      simpsonsArr: simpsonsList,\n      Score: 0,\n      TopScore: 0\n    };\n\n    this.shuffleArr = arr => {\n      let newPosition, temp;\n\n      for (let i = arr.length - 1; i > 0; i--) {\n        newPosition = Math.floor(Math.random() * (i + 1));\n        temp = arr[i];\n        arr[i] = arr[newPosition];\n        arr[newPosition] = temp;\n      }\n\n      return arr;\n    };\n\n    this.handleClick = (event, id) => {\n      event.preventDefault();\n      console.log(id);\n    };\n  }\n\n  // when page loads shuffle through the pokemons\n  componentDidMount() {\n    const newSimpsonsArr = this.shuffleArr(this.state.simpsonsArr);\n    this.setState({\n      simpsonsArr: newSimspsonsArr\n    });\n  }\n\n  render() {\n    return [React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Card, {\n      simpsons: this.state.simpsonsArr,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }))];\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/zmatt1/clicky-game/src/App.js"],"names":["React","Header","Card","charList","App","Component","state","simpsonsArr","simpsonsList","Score","TopScore","shuffleArr","arr","newPosition","temp","i","length","Math","floor","random","handleClick","event","id","preventDefault","console","log","componentDidMount","newSimpsonsArr","setState","newSimspsonsArr","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAO,WAAP;AAEA,OAAOC,QAAP,MAAqB,iBAArB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,WAAW,EAAEC,YADP;AAENC,MAAAA,KAAK,EAAE,CAFD;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,KADwB;;AAAA,SAMhCC,UANgC,GAMnBC,GAAG,IAAI;AAClB,UAAIC,WAAJ,EAAiBC,IAAjB;;AACA,WAAK,IAAIC,CAAC,GAAGH,GAAG,CAACI,MAAJ,GAAa,CAA1B,EAA6BD,CAAC,GAAG,CAAjC,EAAoCA,CAAC,EAArC,EAAyC;AACvCF,QAAAA,WAAW,GAAGI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBJ,CAAC,GAAG,CAArB,CAAX,CAAd;AACAD,QAAAA,IAAI,GAAGF,GAAG,CAACG,CAAD,CAAV;AACAH,QAAAA,GAAG,CAACG,CAAD,CAAH,GAASH,GAAG,CAACC,WAAD,CAAZ;AACAD,QAAAA,GAAG,CAACC,WAAD,CAAH,GAAmBC,IAAnB;AACD;;AACD,aAAOF,GAAP;AACD,KAf+B;;AAAA,SAiBhCQ,WAjBgC,GAiBlB,CAACC,KAAD,EAAQC,EAAR,KAAe;AAC3BD,MAAAA,KAAK,CAACE,cAAN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ;AACD,KApB+B;AAAA;;AAsBhC;AACAI,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,cAAc,GAAG,KAAKhB,UAAL,CAAgB,KAAKL,KAAL,CAAWC,WAA3B,CAAvB;AACA,SAAKqB,QAAL,CAAc;AACZrB,MAAAA,WAAW,EAAEsB;AADD,KAAd;AAGD;;AACDC,EAAAA,MAAM,GAAG;AACP,WAAO,CACL,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,EAGL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKxB,KAAL,CAAWC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHK,CAAP;AAOD;;AArC+B;;AAwClC,eAAeH,GAAf","sourcesContent":["import React from \"react\";\nimport Header from \"./components/Header\";\nimport Card from \"./components/Card\";\nimport \"./App.css\";\n\nimport charList from \"./simpsons.json\";\n\nclass App extends React.Component {\n  state = {\n    simpsonsArr: simpsonsList,\n    Score: 0,\n    TopScore: 0\n  };\n  shuffleArr = arr => {\n    let newPosition, temp;\n    for (let i = arr.length - 1; i > 0; i--) {\n      newPosition = Math.floor(Math.random() * (i + 1));\n      temp = arr[i];\n      arr[i] = arr[newPosition];\n      arr[newPosition] = temp;\n    }\n    return arr;\n  };\n\n  handleClick = (event, id) => {\n    event.preventDefault();\n    console.log(id);\n  };\n\n  // when page loads shuffle through the pokemons\n  componentDidMount() {\n    const newSimpsonsArr = this.shuffleArr(this.state.simpsonsArr);\n    this.setState({\n      simpsonsArr: newSimspsonsArr\n    });\n  }\n  render() {\n    return [\n      <Header />,\n\n      <main>\n        <Card simpsons={this.state.simpsonsArr} />\n      </main>\n    ];\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}